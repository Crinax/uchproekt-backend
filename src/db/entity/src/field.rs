//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "field")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub r#type: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::field_product::Entity")]
    FieldProduct,
}

impl Related<super::field_product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FieldProduct.def()
    }
}

impl Related<super::product::Entity> for Entity {
    fn to() -> RelationDef {
        super::field_product::Relation::Product.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::field_product::Relation::Field.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
