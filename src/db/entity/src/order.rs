//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "order")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub surname: String,
    pub phone: String,
    pub address: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::products_in_order::Entity")]
    ProductsInOrder,
}

impl Related<super::products_in_order::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductsInOrder.def()
    }
}

impl Related<super::product::Entity> for Entity {
    fn to() -> RelationDef {
        super::products_in_order::Relation::Product.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::products_in_order::Relation::Order.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
